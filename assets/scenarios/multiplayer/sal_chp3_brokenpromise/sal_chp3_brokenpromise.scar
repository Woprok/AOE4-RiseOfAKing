-- Copyright 2022 SEGA Corporation, Developed by Relic Entertainment
import("MissionOMatic/MissionOMatic.scar")
import("cardinal.scar")
import("obj_gather.scar")
import("obj_build.scar")
import("obj_fleet.scar")
import("obj_invade.scar")
import("training_sal_chp3_brokenpromise.scar")


-- ////// MISSION START FUNCTIONS ///////////////////////////////////////////////////////////////////////////////

-- This is called so early that there is little you can do but simple stuff like gathering player IDs
function Mission_OnGameSetup()
	
	player1 = World_GetPlayerAt(1) 
	Setup_SetPlayerName(player1, "$999292") -- Guillaume de Normandie
	
	player2 = World_GetPlayerAt(2) 
	Setup_SetPlayerName(player2, 11190570) --Anglo-Saxons
	
	player3 = World_GetPlayerAt(3)
	Setup_SetPlayerName(player3, 11172025) --Neutral
	
end

-- This is called as soon as the game has loaded and things start running.
function Mission_OnInit()
	
	Player_SetCurrentAge(player1, AGE_FEUDAL)
	Player_SetMaximumAge(player1, AGE_FEUDAL)
	
	Player_SetCurrentAge(player2, AGE_DARK)
	Player_SetMaximumAge(player2, AGE_DARK)
	
	Player_SetCurrentAge(player3, AGE_FEUDAL)
	Player_SetMaximumAge(player3, AGE_FEUDAL)
	
	-- Dynamic training is key to this tutorial mission
	Training_SetForceEnableTraining(true)
	
	-- Force enable HUD widgets that are explained in the tutorial
	UI_SetTutorializedWidgetsRequired(true)
	
	-- Set Relationships and Colours
	Player_SetRelationship(player1, player3, R_ALLY)
	Player_SetRelationship(player3, player1, R_ALLY)
	
	Player_SetRelationship(player3, player2, R_ALLY)
	Player_SetRelationship(player2, player3, R_ALLY)
	
	Game_SetPlayerSlotColour(player2, 2)
	Game_SetPlayerUISlotColour(player2, 2)
	
	Game_SetPlayerSlotColour(player3, 1)
	Game_SetPlayerUISlotColour(player3, 1)
	
end

-- This is a good place to initialize global variables. SGroups, data tables, Objectives etc.
function Mission_SetupVariables()
	
	intro_skipped = false
	outro_skipped = false
	
	Modify_PlayerProductionRate(player1, 2)
	local construction_rate_multiplier = 0.5
	Modify_EntityBuildTime(player1, EBP.FRENCH.BUILDING_UNIT_NAVAL_FRE, construction_rate_multiplier)
	
	
	BuildFleet_InitObjectives()
	BeginInvasion_InitObjectives()
	
	eg_start_wallToDestroy = EGroup_CreateIfNotFound("eg_start_wallToDestroy")
	
	-- Designer tuning values
	num_start_villagers = 5
	
	Modify_EntityBuildTime(player1, EBP.FRENCH.UNIT_SPEARMAN_1_FRE, 0.5)
	Modify_EntityBuildTime(player1, EBP.FRENCH.UNIT_SPEARMAN_2_FRE, 0.5)
	Modify_EntityBuildTime(player1, EBP.FRENCH.UNIT_ARCHER_2_FRE, 0.5)
	Modify_EntityBuildTime(player1, EBP.FRENCH.UNIT_HORSEMAN_2_FRE, 0.5)
	
	sg_william = SGroup_CreateIfNotFound("sg_william")
	
	sg_scouts = SGroup_CreateIfNotFound("sg_scouts")
	sg_cavalry = SGroup_CreateIfNotFound("sg_cavalry")
	sg_spearmen = SGroup_CreateIfNotFound("sg_spearmen")
	sg_archers = SGroup_CreateIfNotFound("sg_archers")
	
	sg_cavalry_01 = SGroup_CreateIfNotFound("sg_cavalry_01")
	sg_cavalry_02 = SGroup_CreateIfNotFound("sg_cavalry_02")
	sg_cavalry_03 = SGroup_CreateIfNotFound("sg_cavalry_03")
	sg_cavalry_04 = SGroup_CreateIfNotFound("sg_cavalry_04")
	sg_cavalry_05 = SGroup_CreateIfNotFound("sg_cavalry_05")
	
	sg_spearmen_01 = SGroup_CreateIfNotFound("sg_spearmen_01")
	sg_spearmen_02 = SGroup_CreateIfNotFound("sg_spearmen_02")
	sg_spearmen_03 = SGroup_CreateIfNotFound("sg_spearmen_03")
	sg_spearmen_04 = SGroup_CreateIfNotFound("sg_spearmen_04")
	sg_spearmen_05 = SGroup_CreateIfNotFound("sg_spearmen_05")
	sg_spearmen_06 = SGroup_CreateIfNotFound("sg_spearmen_06")
	sg_spearmen_07 = SGroup_CreateIfNotFound("sg_spearmen_07")
	
	sg_archers_01 = SGroup_CreateIfNotFound("sg_archers_01")
	sg_archers_02 = SGroup_CreateIfNotFound("sg_archers_02")
	sg_archers_03 = SGroup_CreateIfNotFound("sg_archers_03")
	sg_archers_04 = SGroup_CreateIfNotFound("sg_archers_04")
	sg_archers_05 = SGroup_CreateIfNotFound("sg_archers_05")
	
	sg_pevensey = SGroup_CreateIfNotFound("sg_pevensey")
	sg_pevensey_garrison_01 = SGroup_CreateIfNotFound("sg_pevensey_garrison_01")
	sg_pevensey_garrison_02 = SGroup_CreateIfNotFound("sg_pevensey_garrison_02")
	sg_pevensey_garrison_03 = SGroup_CreateIfNotFound("sg_pevensey_garrison_03")
	sg_pevensey_garrison_04 = SGroup_CreateIfNotFound("sg_pevensey_garrison_04")
	sg_pevensey_garrison_05 = SGroup_CreateIfNotFound("sg_pevensey_garrison_05")
	
	sg_hastings = SGroup_CreateIfNotFound("sg_hastings")
	sg_hastings_garrison_01 = SGroup_CreateIfNotFound("sg_hastings_garrison_01")
	sg_hastings_garrison_02 = SGroup_CreateIfNotFound("sg_hastings_garrison_02")
	sg_hastings_garrison_03 = SGroup_CreateIfNotFound("sg_hastings_garrison_03")
	sg_hastings_garrison_04 = SGroup_CreateIfNotFound("sg_hastings_garrison_04")
	sg_hastings_garrison_05 = SGroup_CreateIfNotFound("sg_hastings_garrison_05")
	sg_hastings_garrison_06 = SGroup_CreateIfNotFound("sg_hastings_garrison_06")
	sg_hastings_garrison_07 = SGroup_CreateIfNotFound("sg_hastings_garrison_07")
	sg_hastings_garrison_08 = SGroup_CreateIfNotFound("sg_hastings_garrison_08")
	sg_hastings_garrison_09 = SGroup_CreateIfNotFound("sg_hastings_garrison_09")
	sg_hastings_garrison_10 = SGroup_CreateIfNotFound("sg_hastings_garrison_10")
	sg_hastings_garrison_11 = SGroup_CreateIfNotFound("sg_hastings_garrison_11")
	sg_hastings_garrison_12 = SGroup_CreateIfNotFound("sg_hastings_garrison_12")
	sg_hastings_garrison_13 = SGroup_CreateIfNotFound("sg_hastings_garrison_13")
	sg_hastings_garrison_14 = SGroup_CreateIfNotFound("sg_hastings_garrison_14")
	sg_hastings_garrison_15 = SGroup_CreateIfNotFound("sg_hastings_garrison_15")
	sg_hastings_garrison_16 = SGroup_CreateIfNotFound("sg_hastings_garrison_16")
	
	-- Outro Groups
	sg_william_outro = SGroup_CreateIfNotFound("sg_william_outro")
	
	sg_villager_outro_01 = SGroup_CreateIfNotFound("sg_villager_outro_01")
	sg_villager_outro_02 = SGroup_CreateIfNotFound("sg_villager_outro_02")
	sg_villager_outro_03 = SGroup_CreateIfNotFound("sg_villager_outro_03")
	sg_villager_outro_04 = SGroup_CreateIfNotFound("sg_villager_outro_04")
	
	sg_william_horses_outro_01 = SGroup_CreateIfNotFound("sg_william_horses_outro_01")
	sg_william_horses_outro_02 = SGroup_CreateIfNotFound("sg_william_horses_outro_02")
	
	sg_army_outro = SGroup_CreateIfNotFound("sg_army_outro")
	
	sg_cheerers_outro = SGroup_CreateIfNotFound("sg_cheerers_outro")
	
end

-- Values that we want to change depending on difficulty mode, we declare them as variables in here.
function Mission_SetDifficulty()
	
end

-- If we want to lock out any abilities, units, or other items, we usually do that in this function.
function Mission_SetRestrictions()
	
	Player_CompleteUpgrade(player1, UPG.COMMON.UPGRADE_UNIT_SPEARMAN_2)

	-- Remove access to certain units/buildings/upgrades
	Player_SetConstructionMenuAvailability(player1, "fre_age4", ITEM_REMOVED)
	Player_SetConstructionMenuAvailability(player1, "fre_age3_wonders", ITEM_REMOVED)
	Player_SetConstructionMenuAvailability(player1, "fre_age3", ITEM_REMOVED)
	Player_SetConstructionMenuAvailability(player1, "fre_age2_wonders", ITEM_REMOVED)
	
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_UNIT_NAVAL_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_OUTPOST_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_PALISADE_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_PALISADE_GATE_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_TOWN_CENTER_FRE, ITEM_REMOVED)
	
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_ECON_VILLAGER_HUNTING_GEAR_1, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_SCOUT_FORESTER, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_VILLAGER_HEALTH, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_ECON_RESOURCE_FOOD_HARVEST_RATE_3, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_ECON_RESOURCE_WOOD_HARVEST_RATE_3, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_ECON_RESOURCE_GOLD_HARVEST_RATE_3, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_ECON_RESOURCE_STONE_HARVEST_RATE_3, ITEM_REMOVED)
	
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_TOWER_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_WALL_BASTION_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_WALL_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_DEFENSE_WALL_GATE_FRE, ITEM_REMOVED)
	
    -- Hide from captured Saxon buildings
	Player_SetSquadProductionAvailability(player1, SBP.ENGLISH.UNIT_ARCHER_2_ENG, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.ENGLISH.UNIT_MANATARMS_1_ENG, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.ENGLISH.UNIT_KNIGHT_3_ENG, ITEM_REMOVED)
	
	-- Hide from Barracks/Ranges/Stables
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_UNIT_SPEARMAN_3, ITEM_REMOVED)
	
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_MANATARMS_3_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_UNIT_MANATARMS_4, ITEM_REMOVED)
	
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_KNIGHT_2_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_UNIT_HORSEMAN_3, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_UNIT_KNIGHT_3_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_CAVALRY_CHIVALRY_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_CAVALRY_CANTLED_SADDLE_FRE, ITEM_REMOVED)
	
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_CROSSBOWMAN_3_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_HANDCANNON_4_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_UNIT_ARCHER_3, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_UNIT_CROSSBOWMAN_4, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_UNIT_CROSSBOWMAN_4_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_RANGED_CROSSBOW_STIRRUPS_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_RANGED_CROSSBOW_CRANEQUIN_FRE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_RANGED_CROSSBOW_DRILLS_FRE, ITEM_REMOVED)
	
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_CAVALRY_GRAPERED_LANCE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_SIEGE_ENGINEERS, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_SPEARMAN_ELITE_SPEAR_TACTICS, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_TECH_MILITARY_ACADEMY, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_CAVALRY_BARDING, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_MELEE_DAMAGE_II, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_RANGED_ARMOR_I, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_RANGED_DAMAGE_I, ITEM_REMOVED)
	
	-- Hide from docks
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_FISHING_BOAT_2_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_COMBAT_SHIP_2_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_COMBAT_WARSHIP_4_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_FIRESHIP_3_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_GALLEASS_4_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_SCOUT_2_FRE, ITEM_REMOVED)
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_NAVAL_TRADE_SHIP_3_FRE, ITEM_REMOVED)
	
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_ADDSAILS, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_ECON_EXTENDED_LINES, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_ARMORED_HULL, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_EXPLOSIVES, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_GALLEY_CANNON, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_NAVIGATOR, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_MOUNTED_GUNS, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.COMMON.UPGRADE_NAVAL_FORECASTLE, ITEM_REMOVED)
	Player_SetUpgradeAvailability(player1, UPG.FRENCH.UPGRADE_NAVAL_LONG_GUNS_FRE, ITEM_REMOVED)
	
	-- Hide Siege from Spearmen
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.UNIT_SIEGE_TOWER_3_FRE, ITEM_REMOVED)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.UNIT_RAM_3_FRE, ITEM_REMOVED)
	
	-- Remove English Network of Castles Civ Ability
	Player_SetAbilityAvailability(player2, BP_GetAbilityBlueprint("tower_outpost_alert_aura_eng"), ITEM_REMOVED)
	-- Hide Death
	Player_SetAbilityAvailability(player1, BP_GetAbilityBlueprint("core_unit_death"), ITEM_REMOVED)
	Player_SetAbilityAvailability(player1, BP_GetAbilityBlueprint("core_building_scuttle"), ITEM_REMOVED)
	Player_SetAbilityAvailability(player1, BP_GetAbilityBlueprint("core_building_scuttle_no_enemies"), ITEM_REMOVED)

	Player_SetCommandAvailability(player1, SCMD_Unload, ITEM_REMOVED)

end

-- Called right before the in-game cinematic starts. We spawn starting units, apply upgrades and issue orders.
function Mission_Preset()

	if Music_UnlockIntensity then
        Sound_SetForceMusic(false)
    else
        Sound_SetForceMusic(true)
    end
	
end

-- No clue, I think at basically the same time as Mission_Start but just before it.
function Mission_PreStart()

	hpv = HintPoint_Add(eg_village_market, true, "$11149016", 1, nil, nil, nil, false)
	
	sg_startVillagers = SGroup_CreateIfNotFound("sg_startVillagers")
	sg_start_army = SGroup_CreateIfNotFound("sg_start_army")

	UnitEntry_DeploySquads(player1, sg_startVillagers, {{type = "scar_villager", numSquads = num_start_villagers }}, mkr_start_villagers)
	
	SpawnEnemies()
	
	-- Give player 1500 of each resource
	Player_SetResource( player1, RT_Gold, 1500) 
	Player_SetResource( player1, RT_Wood, 1500) 
	Player_SetResource( player1, RT_Food, 1500)
	
	local wallDestroyMarkers = {
		mkr_wall_breach_01,
		mkr_wall_breach_02,
		mkr_wall_breach_03,
		mkr_wall_breach_04,
	}
	
	-- destroy wall sections
	for index, marker in pairs(wallDestroyMarkers) do 
		Player_GetAllEntitiesNearMarker(player2, eg_temp, marker, 3)
		EGroup_Filter(eg_temp, "wall", FILTER_KEEP)
		EGroup_AddEGroup(eg_start_wallToDestroy, eg_temp)	
	end
	
	EGroup_Kill(eg_start_wallToDestroy)
	
	--set the rest of Pevensey to be low-priority targets and immune to burning so the player doesn't accidentally raze what they will receive
	EGroup_SetTargetingType(eg_pevensey_structures, Targeting_Manual)
	EGroup_SetBurnExtEnabled(eg_pevensey_structures, false)
	mod_pevensey1 = Modify_OnFireThreshold(eg_pevensey_structures, MUT_Multiplication, 99999)
	mod_pevensey2 = Modify_OnFireDamagePerTick(eg_pevensey_structures, MUT_Multiplication, 0)
	
end

-- This is triggered after the intro, just as control is passed to the player
function Mission_Start()
	
	Game_SetVisibility(VF_XboxUIBuildQueue, true)
	Game_SetVisibility(VF_XboxUIQueueModifier, true)
	Game_SetVisibility(VF_XboxUIContextualRadial, true)
	Game_SetVisibility(VF_XboxUIQuickFind, true)
	Game_SetVisibility(VF_XboxUIFindMenu, true)
	Game_SetVisibility(VF_XboxUIResourceCard, true)
	Game_SetVisibility(VF_XboxUIVillagerPriorities, true)
	Game_SetVisibility(VF_XboxUIControlGroups, true)
	Game_SetVisibility(VF_XboxUIQuickCommands, true)
	
	SGroup_EnableLeaderCrown(sg_william, true)
	
	World_SetInteractionStage(0)
	FOW_RevealMarker(mkr_starting_fow_reveal, 0)
	Rule_AddInterval(Mission_Start_WaitForSpeechToFinish, 1)
	
	MissionTutorial_Init()
end

function Mission_Start_WaitForSpeechToFinish()
	
	if not Event_IsAnyRunning() then
		Rule_RemoveMe()
		
		Objective_Start(OBJ_BuildFleet, true, true)

		--Design cheats to test various secttions
		--SpawnCheatArmy()
		--Objective_Start(OBJ_BuildFleet, true, true)
		--SpawnCheatShips()
		--Objective_Start(OBJ_BeginInvasion, true, true)
		
		--[[ Test Outro
		World_SetInteractionStage(1)
		Player_SetCurrentAge(player1, AGE_FEUDAL)
		Mission_Complete()
		--]]
		
	end
end

-- //////////////////////////////////////////////////////////////////////////////////////////////////////////////

function SpawnEnemies()
	
	-- Hastings
	UnitEntry_DeploySquads(player2, sg_hastings, {{type = "scar_spearman", numSquads = 5 }}, mkr_hastings_spearmen_06)
	
end

function SpawnLandingAmbush()
	
	-- Landing Ambush
	sg_landingAmbush = SGroup_CreateIfNotFound("sg_landingAmbush")
	sg_landing_ambush_01 = SGroup_CreateIfNotFound("sg_landing_ambush_01")
	sg_landing_ambush_02 = SGroup_CreateIfNotFound("sg_landing_ambush_02")
	sg_landing_ambush_03 = SGroup_CreateIfNotFound("sg_landing_ambush_03")
	
	UnitEntry_DeploySquads(player2, {sg_landingAmbush, sg_landing_ambush_01}, {{type = "scar_manatarms", numSquads = 5 }}, mkr_landing_challenge_01)
	UnitEntry_DeploySquads(player2, {sg_landingAmbush, sg_landing_ambush_02}, {{type = "scar_manatarms", numSquads = 5 }}, mkr_landing_challenge_02)
	UnitEntry_DeploySquads(player2, {sg_landingAmbush, sg_landing_ambush_03}, {{type = "scar_manatarms", numSquads = 5 }}, mkr_landing_challenge_03)
	
end

function GetTroopsEmbarked(holder)
	
	sg_holding = SGroup_CreateIfNotFound("sg_holding")
	sg_embarked = SGroup_CreateIfNotFound("sg_embarked")
	SGroup_Clear(sg_embarked)
	
	for i = 1, SGroup_Count(holder) do
		Squad_GetSquadsHeld(SGroup_GetSpawnedSquadAt(holder, i), sg_holding)
		SGroup_AddGroup(sg_embarked, sg_holding)
	end
	
	return SGroup_Count(sg_embarked)
	
end

function MonitorPlayerShips()
	
	sg_ships = SGroup_CreateIfNotFound("sg_ships")
	local lastShipCount = SGroup_Count(sg_ships)
	
	Player_GetAll(player1)
	SGroup_Filter(sg_allsquads, SBP.FRENCH.UNIT_NAVAL_TRANSPORT_SHIP_2_FRE, FILTER_KEEP)
	
	if SGroup_Count(sg_allsquads) > lastShipCount then
		
		SGroup_AddGroup(sg_ships, sg_allsquads)
		SGroup_RemoveAbility(sg_ships, BP_GetAbilityBlueprint("core_unit_death"))
		Modify_UnitSpeed(sg_ships, 1.2, nil, MUT_Set)
		
	end
	
end

function SpawnCheatArmy()
	
	sg_spearmen = SGroup_CreateIfNotFound("sg_spearmen")
	sg_horsemen = SGroup_CreateIfNotFound("sg_horsemen")
	sg_archers = SGroup_CreateIfNotFound("sg_archers")
	
	sg_army = SGroup_CreateIfNotFound("sg_army")
	
	UnitEntry_DeploySquads(player1, sg_spearmen, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 40 }}, mkr_start_villagers)
	UnitEntry_DeploySquads(player1, sg_horsemen, {{sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE, numSquads = 30 }}, mkr_start_villagers)
	UnitEntry_DeploySquads(player1, sg_archers, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 30 }}, mkr_start_villagers)
	
	SGroup_AddGroup(sg_army, sg_spearmen)
	SGroup_AddGroup(sg_army, sg_horsemen)
	SGroup_AddGroup(sg_army, sg_archers)
	SGroup_AddGroup(sg_army, sg_william)
end

function SpawnCheatShips()
	sg_ships = SGroup_CreateIfNotFound("sg_ships")
	UnitEntry_DeploySquads(player1, sg_ships, {{sbp = SBP.FRENCH.UNIT_NAVAL_TRANSPORT_SHIP_2_FRE, numSquads = 10 }}, mkr_build_docks)
end	

-- Mission-o-Matic Recipe
function GetRecipe()

	local recipe = {
		
		introNIS = EVENTS.BrokenPromise_Intro,
		outroNIS = EVENTS.BrokenPromise_Outro,

		onStart = {
			titleCard = {
				icon = "icons/campaign/campaign_angevin_rebellion",
				title = "$1000623",
				date = "$999821",
			},
		},
		
	}
	
	return recipe

end

function Init_HastingsDefenders()
	
	local moduleData_hastingsGarrison_01 = 
	{
		descriptor = "hastings_garrison_a",
		type = "Defend",
		marker = mkr_hastings_lower,
		player = player2,
		sgroup = sg_hastings_garrison_01,
		idlePosition = mkr_hastings_spearmen_01,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_spearman", numSquads = 5},
		},
	}
	local moduleData_hastingsGarrison_02 = 
	{
		descriptor = "hastings_garrison_b",
		type = "Defend",
		marker = mkr_hastings_lower,
		player = player2,
		sgroup = sg_hastings_garrison_02,
		idlePosition = mkr_hastings_spearmen_02,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_spearman", numSquads = 5},
		},
	}
	local moduleData_hastingsGarrison_03 = 
	{
		descriptor = "hastings_garrison_c",
		type = "Defend",
		marker = mkr_hastings_upper,
		player = player2,
		sgroup = sg_hastings_garrison_03,
		idlePosition = mkr_hastings_spearmen_03,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_spearman", numSquads = 5},
		},
	}
	local moduleData_hastingsGarrison_04 = 
	{
		descriptor = "hastings_garrison_d",
		type = "Defend",
		marker = mkr_hastings_upper,
		player = player2,
		sgroup = sg_hastings_garrison_04,
		idlePosition = mkr_hastings_spearmen_04,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_spearman", numSquads = 5},
		},
	}
	local moduleData_hastingsGarrison_05 = 
	{
		descriptor = "hastings_garrison_e",
		type = "Defend",
		marker = mkr_hastings_center,
		player = player2,
		sgroup = sg_hastings_garrison_05,
		idlePosition = mkr_hastings_spearmen_05,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_spearman", numSquads = 5},
		},
	}
	local moduleData_hastingsGarrison_06 = 
	{
		descriptor = "hastings_garrison_f",
		type = "Defend",
		marker = mkr_hastings_lower,
		player = player2,
		sgroup = sg_hastings_garrison_07,
		idlePosition = mkr_hastings_cavalry_01,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_horseman", numSquads = 7},
		},
	}
	local moduleData_hastingsGarrison_07 = 
	{
		descriptor = "hastings_garrison_g",
		type = "Defend",
		marker = mkr_hastings_center,
		player = player2,
		sgroup = sg_hastings_garrison_08,
		idlePosition = mkr_hastings_cavalry_02,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_horseman", numSquads = 7},
		},
	}
	local moduleData_hastingsGarrison_08 = 
	{
		descriptor = "hastings_garrison_h",
		type = "Defend",
		marker = mkr_hastings_center,
		player = player2,
		sgroup = sg_hastings_garrison_09,
		idlePosition = mkr_hastings_cavalry_03,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_horseman", numSquads = 7},
		},
	}
	local moduleData_hastingsGarrison_09 = 
	{
		descriptor = "hastings_garrison_i",
		type = "Defend",
		marker = mkr_hastings_lower,
		player = player2,
		sgroup = sg_hastings_garrison_10,
		idlePosition = mkr_hastings_archers_01,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_archer", numSquads = 4},
		},
	}
	local moduleData_hastingsGarrison_10 = 
	{
		descriptor = "hastings_garrison_j",
		type = "Defend",
		marker = mkr_hastings_lower,
		player = player2,
		sgroup = sg_hastings_garrison_11,
		idlePosition = mkr_hastings_archers_02,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_archer", numSquads = 4},
		},
	}
	local moduleData_hastingsGarrison_11 = 
	{
		descriptor = "hastings_garrison_k",
		type = "Defend",
		marker = mkr_hastings_lower,
		player = player2,
		sgroup = sg_hastings_garrison_12,
		idlePosition = mkr_hastings_archers_03,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_archer", numSquads = 4},
		},
	}
	local moduleData_hastingsGarrison_12 = 
	{
		descriptor = "hastings_garrison_l",
		type = "Defend",
		marker = mkr_hastings_upper,
		player = player2,
		sgroup = sg_hastings_garrison_13,
		idlePosition = mkr_hastings_archers_04,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_archer", numSquads = 4},
		},
	}
	local moduleData_hastingsGarrison_13 = 
	{
		descriptor = "hastings_garrison_m",
		type = "Defend",
		marker = mkr_hastings_upper,
		player = player2,
		sgroup = sg_hastings_garrison_14,
		idlePosition = mkr_hastings_archers_05,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_archer", numSquads = 4},
		},
	}
	local moduleData_hastingsGarrison_14 = 
	{
		descriptor = "hastings_garrison_n",
		type = "Defend",
		marker = mkr_hastings_center,
		player = player2,
		sgroup = sg_hastings_garrison_15,
		idlePosition = mkr_hastings_archers_06,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_archer", numSquads = 4},
		},
	}
	local moduleData_hastingsGarrison_15 = 
	{
		descriptor = "hastings_garrison_o",
		type = "Defend",
		marker = mkr_hastings_center,
		player = player2,
		sgroup = sg_hastings_garrison_16,
		idlePosition = mkr_hastings_menatarms_01,
		combatRange = 50,
		leashRange = 65,

		units = 
		{
			{type = "scar_manatarms", numSquads = 5},
		},
	}
	
	Defend_Init(moduleData_hastingsGarrison_01)
	Defend_Init(moduleData_hastingsGarrison_02)
	Defend_Init(moduleData_hastingsGarrison_03)
	Defend_Init(moduleData_hastingsGarrison_04)
	Defend_Init(moduleData_hastingsGarrison_05)
	Defend_Init(moduleData_hastingsGarrison_06)
	Defend_Init(moduleData_hastingsGarrison_07)
	Defend_Init(moduleData_hastingsGarrison_08)
	Defend_Init(moduleData_hastingsGarrison_10)
	Defend_Init(moduleData_hastingsGarrison_11)
	Defend_Init(moduleData_hastingsGarrison_12)
	Defend_Init(moduleData_hastingsGarrison_13)
	Defend_Init(moduleData_hastingsGarrison_14)
	Defend_Init(moduleData_hastingsGarrison_15)
	
end

function Init_PevenseyDefenders()
	
	local moduleData_pevenseyGarrison_01 = 
	{
		descriptor = "pevensey_garrison_a",
		type = "Defend",
		marker = mkr_pevensey_castle,
		player = player2,
		sgroup = sg_pevensey_garrison_01,
		idlePosition = mkr_pevensey_manatarms_01,
		combatRange = 55,
		leashRange = 60,

		units = 
		{
			{type = "scar_manatarms", numSquads = 4},
		},
	}
	local moduleData_pevenseyGarrison_02 = 
	{
		descriptor = "pevensey_garrison_b",
		type = "Defend",
		marker = mkr_pevensey_castle,
		player = player2,
		sgroup = sg_pevensey_garrison_02,
		idlePosition = mkr_pevensey_manatarms_02,
		combatRange = 55,
		leashRange = 60,

		units = 
		{
			{type = "scar_manatarms", numSquads = 4},
		},
	}
	local moduleData_pevenseyGarrison_03 = 
	{
		descriptor = "pevensey_garrison_c",
		type = "Defend",
		marker = mkr_pevensey_castle,
		player = player2,
		sgroup = sg_pevensey_garrison_03,
		idlePosition = mkr_pevensey_spearman_01,
		combatRange = 55,
		leashRange = 60,

		units = 
		{
			{type = "scar_spearman", numSquads = 3},
		},
	}
	local moduleData_pevenseyGarrison_04 = 
	{
		descriptor = "pevensey_garrison_d",
		type = "Defend",
		marker = mkr_pevensey_castle,
		player = player2,
		sgroup = sg_pevensey_garrison_04,
		idlePosition = mkr_pevensey_spearman_02,
		combatRange = 55,
		leashRange = 60,

		units = 
		{
			{type = "scar_spearman", numSquads = 3},
		},
	}
	local moduleData_pevenseyGarrison_05 = 
	{
		descriptor = "pevensey_garrison_e",
		type = "Defend",
		marker = mkr_pevensey_castle,
		player = player2,
		sgroup = sg_pevensey_garrison_05,
		idlePosition = mkr_pevensey_spearman_03,
		combatRange = 55,
		leashRange = 60,

		units = 
		{
			{type = "scar_spearman", numSquads = 3},
		},
	}
	
	Defend_Init(moduleData_pevenseyGarrison_01)
	Defend_Init(moduleData_pevenseyGarrison_02)
	Defend_Init(moduleData_pevenseyGarrison_03)
	Defend_Init(moduleData_pevenseyGarrison_04)
	Defend_Init(moduleData_pevenseyGarrison_05)
	
end

-- Production utilities ///////////////////////////////////////

function ProduceBuildingsObjectiveTracker(context, data)
	-- data = {objective, building_type, desired_amount}
	
	Rule_Add(ProduceBuildings_Monitor, data)
end

function ProduceBuildings_Monitor(context, data)
	-- data = {objective, building_type, desired_amount}

	Player_GetAll(player1)
	EGroup_Filter(eg_allentities, data.building_type, FILTER_KEEP)
	EGroup_FilterUnderConstruction(eg_allentities, FILTER_REMOVE)
	
	current_buildings = EGroup_CountSpawned(eg_allentities)
	local new_buildings = current_buildings - Objective_GetCounter(data.objective)
	
	if new_buildings >= 1 then 
		
		Objective_IncreaseCounter(data.objective, new_units)
		
		if Objective_GetCounter(data.objective) >= data.desired_amount then 
			Music_PlayStinger("sfx_campaign_scripted_ui_objective_counter_update")
			Objective_Complete(data.objective, false, true)
			Rule_RemoveMe()
		end
	end
end

function ProduceUnitsObjectiveTracker(context, data)
	-- data = {objective, unit_type, desired_amount}

	Rule_Add(ProduceUnits_Monitor, data)
end

function ProduceUnits_Monitor(context, data)
	-- data = {objective, unit_type, desired_amount}

	Player_GetAll(player1)
	SGroup_Filter(sg_allsquads, data.unit_type, FILTER_KEEP)
	
	current_units = SGroup_CountSpawned(sg_allsquads)
	new_units = current_units - Objective_GetCounter(data.objective)
	
	if new_units >= 1 then 
		
		Objective_IncreaseCounter(data.objective, new_units)
		
		if Objective_GetCounter(data.objective) >= data.desired_amount then 
			Objective_Complete(data.objective, true, true)
			Rule_RemoveMe()
		end
	end
end

-- ////// INTRO FUNCTIONS ///////////////////////////////////////////////////////////////////////////////////////

function Spawn_Intro()
	
	UnitEntry_DeploySquads(player1, sg_william, {{sbp = SBP.CAMPAIGN.UNIT_DUKE_WILLIAM_CMP_SAL, numSquads = 1}}, mkr_intro_william_spawn)
	Entity_SetInvulnerableMinCap(Squad_GetFirstEntity(SGroup_GetSquadAt(sg_william, 1)), 0.75, -1)
	
	UnitEntry_DeploySquads(player1, sg_scouts, {{sbp = SBP.FRENCH.UNIT_SCOUT_1_FRE, numSquads = 2}}, mkr_intro_scouts_spawn)
	
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_cavalry, sg_cavalry_01}, {{sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE, numSquads = 2}}, mkr_intro_horse_spawn_01)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_cavalry, sg_cavalry_02}, {{sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE, numSquads = 2}}, mkr_intro_horse_spawn_02)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_cavalry, sg_cavalry_03}, {{sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE, numSquads = 2}}, mkr_intro_horse_spawn_03)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_cavalry, sg_cavalry_04}, {{sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE, numSquads = 2}}, mkr_intro_horse_spawn_04)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_cavalry, sg_cavalry_05}, {{sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE, numSquads = 2}}, mkr_intro_horse_spawn_05)
	
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_01}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 3}}, mkr_intro_spear_spawn_01)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_02}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 3}}, mkr_intro_spear_spawn_02)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_03}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 3}}, mkr_intro_spear_spawn_03)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_04}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 3}}, mkr_intro_spear_spawn_04)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_05}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 3}}, mkr_intro_spear_spawn_05)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_06}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 3}}, mkr_intro_spear_spawn_06)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_spearmen, sg_spearmen_07}, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 2}}, mkr_intro_spear_spawn_07)
	
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_archers, sg_archers_01}, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 3}}, mkr_intro_archer_spawn_01)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_archers, sg_archers_02}, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 3}}, mkr_intro_archer_spawn_02)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_archers, sg_archers_03}, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 3}}, mkr_intro_archer_spawn_03)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_archers, sg_archers_04}, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 3}}, mkr_intro_archer_spawn_04)
	UnitEntry_DeploySquads(player1, {sg_start_army, sg_archers, sg_archers_05}, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 3}}, mkr_intro_archer_spawn_05)
	
	Cmd_Move(sg_william, mkr_intro_william_dest)
	
	Cmd_FormationMove(sg_scouts, mkr_intro_scouts_dest)
	
	Cmd_FormationMove(sg_cavalry_01, mkr_intro_horse_dest_01)
	Cmd_FormationMove(sg_cavalry_02, mkr_intro_horse_dest_02)
	Cmd_FormationMove(sg_cavalry_03, mkr_intro_horse_dest_03)
	Cmd_FormationMove(sg_cavalry_04, mkr_intro_horse_dest_04)
	Cmd_FormationMove(sg_cavalry_05, mkr_intro_horse_dest_05)

	Cmd_FormationMove(sg_spearmen_01, mkr_intro_spear_dest_01)
	Cmd_FormationMove(sg_spearmen_02, mkr_intro_spear_dest_02)
	Cmd_FormationMove(sg_spearmen_03, mkr_intro_spear_dest_03)
	Cmd_FormationMove(sg_spearmen_04, mkr_intro_spear_dest_04)
	Cmd_FormationMove(sg_spearmen_05, mkr_intro_spear_dest_05)
	Cmd_FormationMove(sg_spearmen_06, mkr_intro_spear_dest_06)
	Cmd_FormationMove(sg_spearmen_07, mkr_intro_spear_dest_07)
	
	Cmd_FormationMove(sg_archers_01, mkr_intro_archer_dest_01)
	Cmd_FormationMove(sg_archers_02, mkr_intro_archer_dest_02)
	Cmd_FormationMove(sg_archers_03, mkr_intro_archer_dest_03)
	Cmd_FormationMove(sg_archers_04, mkr_intro_archer_dest_04)
	Cmd_FormationMove(sg_archers_05, mkr_intro_archer_dest_05)
	
	Modify_UnitSpeed(sg_cavalry, 0.8)
	Modify_UnitSpeed(sg_william, 0.9)
	Modify_UnitSpeed(sg_scouts, 0.8)
	
end

function Reset_Intro()

	Modify_UnitSpeed(sg_cavalry, 1.25)
	Modify_UnitSpeed(sg_william, 1.1)
	Modify_UnitSpeed(sg_scouts, 1.25)
	
end

function Skip_Intro()
	
	SGroup_FormationWarpToMarker(sg_william, mkr_intro_william_dest)
	
	SGroup_FormationWarpToMarker(sg_scouts, mkr_intro_scouts_dest)
	
	SGroup_FormationWarpToMarker(sg_cavalry_01, mkr_intro_horse_dest_01)
	SGroup_FormationWarpToMarker(sg_cavalry_02, mkr_intro_horse_dest_02)
	SGroup_FormationWarpToMarker(sg_cavalry_03, mkr_intro_horse_dest_03)
	SGroup_FormationWarpToMarker(sg_cavalry_04, mkr_intro_horse_dest_04)
	SGroup_FormationWarpToMarker(sg_cavalry_05, mkr_intro_horse_dest_05)

	SGroup_FormationWarpToMarker(sg_spearmen_01, mkr_intro_spear_dest_01)
	SGroup_FormationWarpToMarker(sg_spearmen_02, mkr_intro_spear_dest_02)
	SGroup_FormationWarpToMarker(sg_spearmen_03, mkr_intro_spear_dest_03)
	SGroup_FormationWarpToMarker(sg_spearmen_04, mkr_intro_spear_dest_04)
	SGroup_FormationWarpToMarker(sg_spearmen_05, mkr_intro_spear_dest_05)
	SGroup_FormationWarpToMarker(sg_spearmen_06, mkr_intro_spear_dest_06)
	SGroup_FormationWarpToMarker(sg_spearmen_07, mkr_intro_spear_dest_07)
	
	SGroup_FormationWarpToMarker(sg_archers_01, mkr_intro_archer_dest_01)
	SGroup_FormationWarpToMarker(sg_archers_02, mkr_intro_archer_dest_02)
	SGroup_FormationWarpToMarker(sg_archers_03, mkr_intro_archer_dest_03)
	SGroup_FormationWarpToMarker(sg_archers_04, mkr_intro_archer_dest_04)
	SGroup_FormationWarpToMarker(sg_archers_05, mkr_intro_archer_dest_05)

	Modify_UnitSpeed(sg_cavalry, 1.25)
	Modify_UnitSpeed(sg_william, 1.1)
	Modify_UnitSpeed(sg_scouts, 1.25)
	
end

-- ////// OUTRO FUNCTIONS ///////////////////////////////////////////////////////////////////////////////////////

function Destroy_Hastings_Outro()
	
	EGroup_Kill(eg_hastings_destroy)
	
end

function HastingsSideSwitch_Outro()
	
	-- Switch Hastings Ownership to Player
	EGroup_SetPlayerOwner(eg_hastings_wall, player1)
	EGroup_SetPlayerOwner(eg_hastings_structures, player1)
	
end

function WilliamMove_Outro()
	
	local parade_a ={
		mkr_william_parade_01a,
		mkr_william_parade_01b,
		mkr_william_parade_01c,
		mkr_william_parade_01d,
	}
	local units_a = {
	   {sbp = SBP.CAMPAIGN.UNIT_DUKE_WILLIAM_CMP_SAL,   numSquads = 1, spawn = mkr_william_spawn_outro},
    }
	Util_UnitParade(parade_a, units_a, sg_william_outro)
	
	
	
	local parade_b ={
		mkr_william_parade_02a,
		mkr_william_parade_02b,
		mkr_william_parade_02c,
		mkr_william_parade_02g,
		mkr_william_parade_02h,
		mkr_william_parade_02i,
		mkr_william_parade_02d,
		mkr_william_parade_02e,
		mkr_william_parade_02f,
	}
	local units_b = {
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_02},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_04},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_06},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_08},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_10},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_12},
    }
	Util_UnitParade(parade_b, units_b, sg_william_horses_outro_02)
	
	
	
	local parade_c ={
		mkr_william_parade_03a,
		mkr_william_parade_03b,
		mkr_william_parade_03c,
		mkr_william_parade_03g,
		mkr_william_parade_03h,
		mkr_william_parade_03i,
		mkr_william_parade_03d,
		mkr_william_parade_03e,
		mkr_william_parade_03f,
	}
	local units_c = {
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_01},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_03},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_05},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_07},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_09},
	   {sbp = SBP.FRENCH.UNIT_HORSEMAN_2_FRE,   numSquads = 1, spawn = mkr_william_horses_outro_11},
    }
	Util_UnitParade(parade_c, units_c, sg_william_horses_outro_01)
	
	Modify_UnitSpeed(sg_william_outro, 0.7)
	Modify_UnitSpeed(sg_william_horses_outro_01, 0.6)
	Modify_UnitSpeed(sg_william_horses_outro_02, 0.6)
	
end

function Spawn_Outro()
	
	-- Villagers
	UnitEntry_DeploySquads(player1, sg_villager_outro_01, {{sbp = SBP.FRENCH.UNIT_VILLAGER_1_FRE, numSquads = 1 }}, mkr_villager_outro_01)
	UnitEntry_DeploySquads(player1, sg_villager_outro_02, {{sbp = SBP.FRENCH.UNIT_VILLAGER_1_FRE, numSquads = 1 }}, mkr_villager_outro_02)
	UnitEntry_DeploySquads(player1, sg_villager_outro_03, {{sbp = SBP.FRENCH.UNIT_VILLAGER_1_FRE, numSquads = 1 }}, mkr_villager_outro_03)
	
	UnitEntry_DeploySquads(player1, sg_villager_outro_04, {{sbp = SBP.FRENCH.UNIT_VILLAGER_1_FRE, numSquads = 1 }}, mkr_villager_outro_04)
	
	-- Army
	UnitEntry_DeploySquads(player1, sg_army_outro, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 6 }}, mkr_army_outro_01)
	UnitEntry_DeploySquads(player1, sg_army_outro, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 6 }}, mkr_army_outro_02)
	UnitEntry_DeploySquads(player1, sg_army_outro, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 6 }}, mkr_army_outro_03)
	UnitEntry_DeploySquads(player1, sg_army_outro, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 6 }}, mkr_army_outro_04)
	
	-- Cheerers
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 6 }}, mkr_cheerers_outro_01)
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 6 }}, mkr_cheerers_outro_02)
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 8 }}, mkr_cheerers_outro_03)
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 6 }}, mkr_cheerers_outro_04)
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 6 }}, mkr_cheerers_outro_05)
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_ARCHER_2_FRE, numSquads = 8 }}, mkr_cheerers_outro_06)
	UnitEntry_DeploySquads(player1, sg_cheerers_outro, {{sbp = SBP.FRENCH.UNIT_SPEARMAN_2_FRE, numSquads = 4 }}, mkr_cheerers_outro_07)
	SGroup_EnableCheering(sg_cheerers_outro, true)
	SGroup_EnableCheering(sg_army_outro, true)
	
end

function RestoreHastings_Outro()
	
	Player_SetResource(player1, RT_Wood, 10000) 
	
	Modify_EntityBuildTime(player1, EBP.FRENCH.BUILDING_UNIT_INFANTRY_CONTROL_FRE, 0.4)
	Modify_EntityBuildTime(player1, EBP.FRENCH.BUILDING_UNIT_RANGED_CONTROL_FRE, 0.4)
	Modify_EntityBuildTime(player1, EBP.FRENCH.BUILDING_HOUSE_CONTROL_FRE, 0.5)
	
	Cmd_Construct(sg_villager_outro_01, EBP.FRENCH.BUILDING_UNIT_INFANTRY_CONTROL_FRE, mkr_house_resconstruct_01)
	Cmd_Construct(sg_villager_outro_02, EBP.FRENCH.BUILDING_UNIT_RANGED_CONTROL_FRE, mkr_house_resconstruct_02)
	Cmd_Construct(sg_villager_outro_03, EBP.FRENCH.BUILDING_HOUSE_CONTROL_FRE, mkr_house_resconstruct_03)
	
end