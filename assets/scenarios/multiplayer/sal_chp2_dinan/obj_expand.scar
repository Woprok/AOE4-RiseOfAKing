-- Copyright 2022 SEGA Corporation, Developed by Relic Entertainment

function Expand_InitObjectives()
	
	OBJ_VillagerPriorities = {
		Title = "$1000942", -- Re-Prioritize the Villagers
		Type = ObjectiveType_Primary,

		IsComplete = function()
			return Objective_AreSubObjectivesComplete(OBJ_VillagerPriorities, ALL)
		end
	}
	
	SOBJ_SetMilitaryPreset = {
		Title = "$1000941", -- Choose the Military Preset
		Type = ObjectiveType_Primary,
		Parent = OBJ_VillagerPriorities,
		StartAlongsideParent = true,
		OnStart = SetMilitaryPreset_Start,

		OnComplete = function()
			Objective_Start(OBJ_Spearmen, true, true)
		end
	}
	
	-- Register objectives
	Objective_Register(OBJ_VillagerPriorities)
	Objective_Register(SOBJ_SetMilitaryPreset)
	
	OBJ_Spearmen = {
		Title = "$999593", -- Recruit Spearmen
		Type = ObjectiveType_Primary,
		Intel_Start = EVENTS.BuildBarracksStart,
		OnStart = HandleBuildHousesObjective,

		IsComplete = function()
			return Objective_AreSubObjectivesComplete(OBJ_Spearmen, ALL)
		end
	}
	
	SOBJ_Build2Houses = {
		Title = "$999594", -- Build 2 houses
		Type = ObjectiveType_Build,
		Parent = OBJ_Spearmen,
		StartAlongsideParent = false,
		PreStart = Build2Houses_PreStart,
		OnStart = Build2Houses_Start,

		OnComplete = function()
			Music_PlayStinger("sfx_campaign_scripted_ui_objective_counter_update")
			Objective_Start(SOBJ_BuildBarracks, false, true)
		end
	}

	SOBJ_BuildBarracks = {
		Title = "$999596", -- Build a Barracks
		Type = ObjectiveType_Build,
		Parent = OBJ_Spearmen,
		StartAlongsideParent = false,
		SetupUI = BuildBarracks_UI,
		PreStart = BuildBarracks_PreStart,
		OnStart = BuildBarracks_Start,

		OnComplete = function()
			Music_PlayStinger("sfx_campaign_scripted_ui_objective_counter_update")
			Objective_Start(SOBJ_SetRally, false, true)
		end
	}
	
	SOBJ_SetRally = {
		Title = "$999599", -- Set a Rally Point
		Type = ObjectiveType_Primary,
		Parent = OBJ_Spearmen,
		StartAlongsideParent = false,
		SetupUI = SetRally_UI,
		OnStart = SetRally_Start,

		OnComplete = function()
			Music_PlayStinger("sfx_campaign_scripted_ui_objective_counter_update")
			Objective_Start(SOBJ_Make10Spearmen, false, true)
		end
	}

	SOBJ_Make10Spearmen = {
		Title = "$999603", -- Make 10 Spearmen
		Type = ObjectiveType_Primary,
		Parent = OBJ_Spearmen,
		StartAlongsideParent = false,
		SetupUI = Make10Spearmen_UI,
		PreStart = Make10Spearmen_PreStart,
		OnStart = Make10Spearmen_Start,

		OnComplete = function()
			Objective_Start(OBJ_Cavalry, true, true)
		end
	}
	-- Register all objectives
	Objective_Register(OBJ_Spearmen)
	Objective_Register(SOBJ_Build2Houses)
	Objective_Register(SOBJ_BuildBarracks)
	Objective_Register(SOBJ_SetRally)
	Objective_Register(SOBJ_Make10Spearmen)
	
	OBJ_Cavalry = {
		Title = "$999611", -- Recruit Horsemen
		Type = ObjectiveType_Primary,
		Intel_Start = EVENTS.BuildStablesStart,

		IsComplete = function()
			return Objective_AreSubObjectivesComplete(OBJ_Cavalry, ALL)
		end
	}

	SOBJ_BuildStables = {
		Title = "$999612", -- Build a Stable
		Type = ObjectiveType_Build,
		Parent = OBJ_Cavalry,
		StartAlongsideParent = true,
		SetupUI = BuildStables_UI,
		PreStart = BuildStables_PreStart,
		OnStart = BuildStables_Start,

		OnComplete = function()
			Music_PlayStinger("sfx_campaign_scripted_ui_objective_counter_update")
			Util_StartIntel(EVENTS.SOBJ_HorsemenRaid_DelayedStart)
		end
	}
	
	SOBJ_HorsemenRaid = {
		Title = "$999630", -- Defeat the Enemy Raid
		Type = ObjectiveType_Battle,
		Parent = OBJ_Cavalry,
		StartAlongsideParent = false,
		SetupUI = HorsemenRaid_UI,
		OnStart = HorsemenRaid_Start,

		OnComplete = function()
			Music_LockIntensity(MUSIC_EXPLORE) --Lower Music Intensity
 			Objective_Start(SOBJ_Make10Horsemen, true, true)
		end
	}

	SOBJ_Make10Horsemen = {
		Title = "$999616", -- Make 10 Horsemen
		Type = ObjectiveType_Primary,
		Parent = OBJ_Cavalry,
		StartAlongsideParent = false,
		PreStart = Make10Horsemen_PreStart,
		SetupUI = Make10Horsemen_UI,
		OnStart = Make10Horsemen_Start,

		OnComplete = function()
			Objective_Start(OBJ_Archers, true, true)
		end
	}
	-- Register all objectives
	Objective_Register(OBJ_Cavalry)
	Objective_Register(SOBJ_BuildStables)
	Objective_Register(SOBJ_HorsemenRaid)
	Objective_Register(SOBJ_Make10Horsemen)
	
	OBJ_Archers = {
		Title = "$999621", -- Recruit Archers
		Type = ObjectiveType_Primary,
		Intel_Start = EVENTS.BuildArcheryStart,

		IsComplete = function()
			return Objective_AreSubObjectivesComplete(OBJ_Archers, ALL)
		end
	}

	SOBJ_BuildArchery = {
		Title = "$999622", -- Build an Archery Range
		Type = ObjectiveType_Build,
		Parent = OBJ_Archers,
		StartAlongsideParent = true,
		SetupUI = BuildArchery_UI,
		PreStart = BuildArchery_PreStart,
		OnStart = BuildArchery_Start,

		OnComplete = function()
			Music_PlayStinger("sfx_campaign_scripted_ui_objective_counter_update")
			Util_StartIntel(EVENTS.SOBJ_ArchersRaid_DelayedStart)
		end
	}
	
	SOBJ_ArchersRaid = {
		Title = "$999630", -- Defeat the Enemy Raid
		Type = ObjectiveType_Battle,
		Parent = OBJ_Archers,
		StartAlongsideParent = false,
		SetupUI = ArchersRaid_UI,
		OnStart = ArchersRaid_Start,

		OnComplete = function()
			Music_LockIntensity(MUSIC_EXPLORE) --Lower Music Intensity
			Objective_Start(SOBJ_Make10Archers, true, true)
		end
	}

	SOBJ_Make10Archers = {
		Title = "$999624", -- Make 10 Archers
		Type = ObjectiveType_Primary,
		Parent = OBJ_Archers,
		StartAlongsideParent = false,
		SetupUI = Make10Archers_UI,
		PreStart = Make10Archers_PreStart,
		OnStart = Make10Archers_Start,

		OnComplete = function()
			Objective_Start(OBJ_Capture, true, true)
		end
	}
	-- Register all objectives
	Objective_Register(OBJ_Archers)
	Objective_Register(SOBJ_BuildArchery)
	Objective_Register(SOBJ_ArchersRaid)
	Objective_Register(SOBJ_Make10Archers)
end

-- ///// SetMilitaryPreset /////////////////////////////////////////
function SetMilitaryPreset_Start()

	Goals_VillagerPriorities()
	Rule_Add(SetMilitaryPreset_Monitor)
end

function SetMilitaryPreset_Monitor()

	--local resources = UI_GetGovernmentRadialWeights()
	local resources = { food = 1, gold = 1, wood = 1, stone = 1, }
	if resources.food > 0 or resources.gold > 0 or resources.wood > 0 or resources.stone > 0 then
		
		Objective_Complete(SOBJ_SetMilitaryPreset, false, true)
		Rule_RemoveMe()
	end

end

-- ///// Build2Houses //////////////////////////////////////////////

function HandleBuildHousesObjective()
	Player_GetAll(player1)
	EGroup_Filter(eg_allentities,"scar_house", FILTER_KEEP)
	
	local built_houses_count = math.max(EGroup_CountSpawned(eg_allentities) - starting_houses_count, 0)
	
	if(built_houses_count < 2) then
		Objective_Start(SOBJ_Build2Houses, false, true)
		Objective_SetCounter(SOBJ_Build2Houses, built_houses_count, 2)
	else
		Objective_Start(SOBJ_BuildBarracks, false, true)
	end
end

function Build2Houses_PreStart()

    Player_AddResource(player1, RT_Wood, 100)
	
	training_houses_started = 0
	Rule_AddGlobalEvent(BuildHousesStart_Monitor, GE_ConstructionStart)
	UI_SetModalConstructionPhaseCallback(PlacingHousesMonitor) 
	
	Rule_AddOneShot(ProduceBuildingsObjectiveTracker, 0, {objective = SOBJ_Build2Houses, building_type = "scar_house", desired_amount = 2})
	
end

function Build2Houses_Start()
	
	Goals_Build2Houses()
	
end

-- Used for advancing training hints
function BuildHousesStart_Monitor(context)

	local building_owner = Entity_GetPlayerOwner(context.entity)
	if building_owner == player1  and Entity_IsOfType(context.entity, "house") then
		
		training_houses_started = training_houses_started + 1
		if training_houses_started == 2 then
			Rule_RemoveMe()
		end
	end
end

function PlacingHousesMonitor(blueprint, phase)
	if blueprint == EBP.FRENCH.BUILDING_HOUSE_CONTROL_FRE then
		if phase == TP_Cancelled then
			training_placing_houses = false
		elseif phase == TP_Issued then
			training_placing_houses = true
			Rule_RemoveMe()
		else
			training_placing_houses = true
		end
	end
end

-- ///// BuildBarracks //////////////////////////////////////////////
function BuildBarracks_UI()
	
end

function BuildBarracks_PreStart()

	Player_AddResource(player1, RT_Wood, 150)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_UNIT_INFANTRY_CONTROL_FRE, ITEM_UNLOCKED)
	Objective_SetCounter(SOBJ_BuildBarracks, 0, 1)
	
	Rule_AddOneShot(ProduceBuildingsObjectiveTracker, 0, {objective = SOBJ_BuildBarracks, building_type = "scar_barracks", desired_amount = 1})
	UI_SetModalConstructionPhaseCallback(PlacingBarracksMonitor)

end

function BuildBarracks_Start()

	Goals_BuildBarracks()
	
end

function PlacingBarracksMonitor(blueprint, phase)
	if blueprint == EBP.FRENCH.BUILDING_UNIT_INFANTRY_CONTROL_FRE then
		training_placing_barracks = true
		Rule_RemoveMe()
	end
end

-- ///// SetRally /////////////////////////////////////////
function SetRally_UI()
	
end

function SetRally_Start()

	Player_GetAll(player1)
	EGroup_Filter(eg_allentities, "scar_barracks", FILTER_KEEP)
	eg_barracks = EGroup_CreateIfNotFound("eg_barracks")
	EGroup_AddEGroup(eg_barracks, eg_allentities)
	EGroup_SetInvulnerable(eg_barracks, 0.5)
	Goals_RallyPoint()
	Rule_AddEGroupEvent(OnRallyPoint, eg_barracks, GE_EntityCommandIssued)
end

function OnRallyPoint(context)

	if context.command == CMD_RallyPoint then

		Objective_Complete(SOBJ_SetRally, false, true)
		Rule_RemoveMe()
	end
end

-- ///// Make10Spearmen //////////////////////////////////////////////
function Make10Spearmen_UI()
	
end

function Make10Spearmen_PreStart()

    Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_SPEARMAN_1_FRE, ITEM_UNLOCKED)
	Objective_SetCounter(SOBJ_Make10Spearmen, 0, 10)
	
	Rule_AddOneShot(ProduceUnitsObjectiveTracker, 0, {objective = SOBJ_Make10Spearmen, unit_type = "scar_spearman", desired_amount = 10, production_egroup = eg_barracks})
	
end

function Make10Spearmen_Start()

	Goals_Make10Spearmen()
	
end

-- ///// BuildStables //////////////////////////////////////////////
function BuildStables_UI()
	
end

function BuildStables_PreStart()

	Player_AddResource(player1, RT_Wood, 150)
	Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_UNIT_CAVALRY_CONTROL_FRE, ITEM_UNLOCKED)
	Objective_SetCounter(SOBJ_BuildStables, 0, 1)
	
	Rule_AddOneShot(ProduceBuildingsObjectiveTracker, 0, {objective = SOBJ_BuildStables, building_type = "scar_stable", desired_amount = 1})
	UI_SetModalConstructionPhaseCallback(PlacingStablesMonitor) 

end

function BuildStables_Start()

	Goals_BuildStables()
	
end

function PlacingStablesMonitor(blueprint, phase)
	if blueprint == EBP.FRENCH.BUILDING_UNIT_CAVALRY_CONTROL_FRE then
		training_placing_stables = true
		Rule_RemoveMe()
	end
end

-- ///// HorsemenRaid //////////////////////////////////////////////
function HorsemenRaid_UI()
	
	Player_GetAll(player1)
	EGroup_Filter(eg_allentities, "scar_stable", FILTER_KEEP)
	eg_stables = EGroup_CreateIfNotFound("eg_stables")
	EGroup_AddEGroup(eg_stables, eg_allentities)
	-- Add the landmark as it can produce horsemen
	EGroup_AddEGroup(eg_stables, eg_player_landmark)
	EGroup_SetInvulnerable(eg_stables, 0.5)
	
	SGroup_Filter(sg_allsquads, "scar_spearman", FILTER_KEEP)
	sg_spearmen = SGroup_CreateIfNotFound("sg_spearmen")
	SGroup_AddGroup(sg_spearmen, sg_allsquads)
end

function HorsemenRaid_Start()

	Music_LockIntensity(MUSIC_TENSE_COMBAT) --Raise Music Intensity
	
	sg_raid_horsemen = SGroup_CreateIfNotFound("sg_raid_horsemen")
	UnitEntry_DeploySquads(player2, sg_raid_horsemen, {{type = "scar_horseman", numSquads = num_raid_horsemen }}, mkr_raid_spawn_a)
	EventCues_CallToAction("$42766", CTA_ALARM, nil, nil, mkr_raid_CtA, 10)
	FOW_PlayerRevealSGroup(player1, sg_raid_horsemen, 3, -1) 
	
	Modify_UnitSpeed(sg_raid_horsemen, 0.8, nil, MUT_Set)
	
	Objective_AddUIElements(SOBJ_HorsemenRaid, SGroup_GetSpawnedSquadAt(sg_raid_horsemen, 1), true, "$11096699", false, 5)
	
	Cmd_Move(sg_raid_horsemen, Marker_GetPosition(mkr_raid_target_a1), false)
	Cmd_Move(sg_raid_horsemen, Marker_GetPosition(mkr_raid_target_a2), true)
	Cmd_AttackMove(sg_raid_horsemen, Marker_GetPosition(mkr_raid_target_a3), true)
	Cmd_AttackMove(sg_raid_horsemen, Marker_GetPosition(mkr_raid_target_a4), true)
	Cmd_AttackMove(sg_raid_horsemen, eg_player_tc, true)
	
	Goals_HorsemenRaid()
	Rule_Add(HorsemenRaid_Monitor)
end

function HorsemenRaid_Monitor()
	
	if SGroup_CountSpawned(sg_raid_horsemen) <= 0 then
		Objective_Complete(SOBJ_HorsemenRaid, true, true)
		Rule_RemoveMe()
	end
end

-- ///// Make10Horsemen //////////////////////////////////////////////
function Make10Horsemen_UI()
	
end

function Make10Horsemen_PreStart()
	
	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_HORSEMAN_2_FRE, ITEM_UNLOCKED)
	Objective_SetCounter(SOBJ_Make10Horsemen, 0, 10)
	
	Player_GetAll(player1)
	SGroup_Filter(sg_allsquads, "scar_spearman", FILTER_KEEP)
	SGroup_AddGroup(sg_spearmen, sg_allsquads)
	Cmd_Move(sg_spearmen, mkr_raid_reset)
	Cmd_Move(sg_scout, mkr_starting_villagerse)
	Misc_ClearSelection()
	
	Rule_AddOneShot(ProduceUnitsObjectiveTracker, 0, {objective = SOBJ_Make10Horsemen, unit_type = "scar_horseman", desired_amount = 10, production_egroup = eg_stables})
	
end

function Make10Horsemen_Start()
	
	Goals_ProduceMultipleSources()
	
end

-- ///// BuildArchery //////////////////////////////////////////////
function BuildArchery_UI()
	
end

function BuildArchery_PreStart()

	Player_AddResource(player1, RT_Wood, 150)
    Player_SetEntityProductionAvailability(player1, EBP.FRENCH.BUILDING_UNIT_RANGED_CONTROL_FRE, ITEM_UNLOCKED)
	Objective_SetCounter(SOBJ_BuildArchery, 0, 1)
	
	Rule_AddOneShot(ProduceBuildingsObjectiveTracker, 0, {objective = SOBJ_BuildArchery, building_type = "scar_archeryrange", desired_amount = 1})
	UI_SetModalConstructionPhaseCallback(PlacingArcheryMonitor)
	
end

function BuildArchery_Start()

	Goals_BuildArchery()

end

function PlacingArcheryMonitor(blueprint, phase)
	if blueprint == EBP.FRENCH.BUILDING_UNIT_RANGED_CONTROL_FRE then
		training_placing_archery = true
		Rule_RemoveMe()
	end
end

-- ///// ArchersRaid //////////////////////////////////////////////
function ArchersRaid_UI()
	
	Player_GetAll(player1)
	EGroup_Filter(eg_allentities, "scar_archeryrange", FILTER_KEEP)
	eg_archeryranges = EGroup_CreateIfNotFound("eg_archeryranges")
	EGroup_AddEGroup(eg_archeryranges, eg_allentities)
	
	SGroup_Filter(sg_allsquads, "scar_horseman", FILTER_KEEP)
	sg_horsemen = SGroup_CreateIfNotFound("sg_horsemen")
	SGroup_AddGroup(sg_horsemen, sg_allsquads)

end

function ArchersRaid_Start()

	Music_LockIntensity(MUSIC_TENSE_COMBAT) --Raise Music Intensity
	
	sg_raid_archers = SGroup_CreateIfNotFound("sg_raid_archers")
	
	UnitEntry_DeploySquads(player2, sg_raid_archers, {{type = "scar_archer", numSquads = num_raid_archers }}, mkr_raid_spawn_a)
	EventCues_CallToAction("$42766", CTA_ALARM, nil, nil, mkr_raid_CtA, 10)
	FOW_PlayerRevealSGroup(player1, sg_raid_archers, 3, -1) 
	
	Objective_AddUIElements(SOBJ_ArchersRaid, SGroup_GetSpawnedSquadAt(sg_raid_archers, 1), true, "$11096699", false, 5)
    
	Cmd_Move(sg_raid_archers, Marker_GetPosition(mkr_raid_target_a1), false)
	Cmd_Move(sg_raid_archers, Marker_GetPosition(mkr_raid_target_a2), true)
	Cmd_AttackMove(sg_raid_archers, Marker_GetPosition(mkr_raid_target_a3), true)
	Cmd_AttackMove(sg_raid_archers, Marker_GetPosition(mkr_raid_target_a4), true)
	Cmd_AttackMove(sg_raid_archers, eg_player_tc, true)
	
	Goals_ArchersRaid()
	Rule_Add(ArchersRaid_Monitor)
end

function ArchersRaid_Monitor()
	
	if SGroup_CountSpawned(sg_raid_archers) <= 0 then
		Objective_Complete(SOBJ_ArchersRaid, true, true)
		Rule_RemoveMe()
	end
end

-- ///// Make10Archers //////////////////////////////////////////////
function Make10Archers_UI()
	
end

function Make10Archers_PreStart()

	Player_SetSquadProductionAvailability(player1, SBP.FRENCH.UNIT_ARCHER_2_FRE, ITEM_UNLOCKED)
	Objective_SetCounter(SOBJ_Make10Archers, 0, 10)
	
    Rule_AddOneShot(ProduceUnitsObjectiveTracker, 0, {objective = SOBJ_Make10Archers, unit_type = "scar_archer", desired_amount = 10, production_egroup = eg_archeryranges})
	
end

function Make10Archers_Start()

	Goals_Make10Archers()
	
end