-- Copyright 2022 SEGA Corporation, Developed by Relic Entertainment
import("obj_prepare.scar")
import("sal_chp1_valesdun.scar")  

function CommandArchers_InitObjectives()

	OBJ_CommandArchers = {
		Title = "$999506", --Command the Archers
		Type = ObjectiveType_Primary,
		Intel_Start = EVENTS.AmbushStart,
		Intel_Complete = EVENTS.AmbushEnd,

		IsComplete = function()
			return Objective_AreSubObjectivesComplete(OBJ_CommandArchers, ALL)
		end,
		PreComplete = CommandArchers_PreComplete,
		OnComplete = function()
			Objective_Start(OBJ_PrepareForBattle, true, true)
		end,
	}
	
	SOBJ_PositionAmbush = {
		Title = "$999507", --Ready the Archers for an Ambush
		Type = ObjectiveType_Battle,
		Parent = OBJ_CommandArchers,
		StartAlongsideParent = true,
		SetupUI = PositionAmbush_UI,
		OnStart = PositionAmbush_Start,

		OnComplete = function()
			Objective_Start(SOBJ_AmbushSpearmen, false, true)
		end,
	}
	
	SOBJ_AmbushSpearmen = {
		Title = "$999509", --Defeat the Enemy Spearmen
		Type = ObjectiveType_Battle,
		Parent = OBJ_CommandArchers,
		StartAlongsideParent = false,
		SetupUI = AmbushSpearmen_UI,
		OnStart = AmbushSpearmen_Start,

	}
	
	-- Register all objectives
	Objective_Register(OBJ_CommandArchers)
	Objective_Register(SOBJ_PositionAmbush)
	Objective_Register(SOBJ_AmbushSpearmen)
	
end

-- ///// PositionAmbush //////////////////////////////////////////////
function PositionAmbush_UI()
	
	max_spearmen = SGroup_CountSpawned(sg_enemy_spearmen)
	
	ambush_marker_ui = Objective_AddUIElements(SOBJ_PositionAmbush, mkr_ambush, true, "$999508", true, 5)
	ambush_marker_aura = Objective_AddGroundReticule(SOBJ_PositionAmbush, mkr_ambush, Marker_GetProximityRadiusOrDefault(mkr_ambush, marker_aura_size), BP_GetReticuleBlueprint("aura_ring"), false)
	
	FOW_RevealMarker(mkr_fow_reveal_obj2h, -1)
	FOW_RevealMarker(mkr_fow_reveal_ambush_hill, -1)
	EventCues_CallToAction("$1000620", CTA_UNIQUE_STAKES, nil, nil, mkr_ambush, 20)
	
end

function PositionAmbush_Start()
	
	Rule_Add(PositionAmbush_Monitor)
	
	Cmd_FormationMove(sg_william, mkr_village_move_william)
	Cmd_FormationMove(sg_starting_spearmen, mkr_village_move_spearmen)
	Cmd_FormationMove(sg_horsemen, mkr_village_move_cavalry)
	
end

function PositionAmbush_Monitor()

	if Prox_AreSquadsNearMarker(sg_archers, mkr_ambush, ALL, 10) then
		
		Objective_Complete(SOBJ_PositionAmbush, false, true)
		Rule_RemoveMe()
		
	end
end

-- ///// AmbushSpearmen //////////////////////////////////////////////
function AmbushSpearmen_UI()
	max_spearmen = SGroup_CountSpawned(sg_enemy_spearmen)
	Objective_SetCounter(SOBJ_AmbushSpearmen, 0, max_spearmen)
	
end

function AmbushSpearmen_Start()
	
	Goals_TerrainAdvantage()
	
	World_SetInteractionStage(8)
	Cmd_AttackMove(sg_enemy_spearmen,mkr_obj2h_trigger)
	
	Rule_AddGlobalEvent(SpearmanDefeatedTracker,GE_SquadKilled)
	
end

function SpearmanDefeatedTracker(context)
	
	local owner = Squad_GetPlayerOwner(context.victim)
	
	if owner == player2 then
		local victim = context.victim	
		if Objective_IsComplete(SOBJ_AmbushSpearmen) == true then
			Rule_RemoveMe()
		else
			if SGroup_ContainsSquad(sg_enemy_spearmen, victim.SquadID, true) then 
				
				local amount_killed = Objective_GetCounter(SOBJ_AmbushSpearmen) + 1
				
				if amount_killed <= max_spearmen then
					Objective_IncreaseCounter(SOBJ_AmbushSpearmen, 1)
				end
				
				if amount_killed >= max_spearmen then
					Sound_PlayOnSquad(WALLA_CAMP_CELEBRATE_MEDIUM, sg_archers)
					Objective_Complete(SOBJ_AmbushSpearmen, false, true)
					Rule_RemoveMe()
				end
			end
		end
		-- if the player is losing units in this window, make sure they still have enough archers to win
		-- if they don't spawn some more and send them to attack the enemy spearmen
		-- this guards against the player doing silly things that somehow get all their archers killed and block mission progress
	elseif owner == player1 then
		if SGroup_CountSpawned(sg_archers) <= num_allied_archers_per_marker then
			SGroup_Clear(sg_temp)
			UnitEntry_DeploySquads(player1, {sg_archers, sg_temp}, {{type = "scar_archer", numSquads = num_allied_archers_per_marker }}, mkr_obj2g_archery_spawn_01)
			UnitEntry_DeploySquads(player1, {sg_archers, sg_temp}, {{type = "scar_archer", numSquads = num_allied_archers_per_marker }}, mkr_obj2g_archery_spawn_02)
			UnitEntry_DeploySquads(player1, {sg_archers, sg_temp}, {{type = "scar_archer", numSquads = num_allied_archers_per_marker }}, mkr_obj2g_archery_spawn_03)
			Cmd_AttackMove(sg_temp, mkr_ambush)
		end
	end
end

-- once the objective is done return control of other units to player 
-- this happens when the speech starts, not after
function CommandArchers_PreComplete()
	-- Return the other units
	World_EnableSharedLineOfSight(player1, player4, false)
	SGroup_SetSelectable(sg_player_units, true)
	SGroup_SetPlayerOwner(sg_player_units, player1)
	
	RestoreControlGroups(sg_archers)

	--move in the troops so the player doesn't have to hunt for them
	Cmd_FormationMove(sg_william, mkr_post_village_move_william)
	Cmd_FormationMove(sg_starting_spearmen, mkr_post_village_move_spearmen)
	Cmd_FormationMove(sg_horsemen, mkr_post_village_move_cavalry)	
	
	-- clean up FOW reveals
	FOW_UnRevealMarker(mkr_fow_reveal_obj2h)
	FOW_UnRevealMarker(mkr_fow_reveal_ambush_hill)
	
	--refresh sgroup we use for all player units
	Player_GetAll(player1, sg_player_units)
end




